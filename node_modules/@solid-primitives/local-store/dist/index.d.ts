/**
 * Create a new storage primitive that can retain any data type
 * with an interface compatible with the Web Storage API.
 *
 * @param prefix - Prefix to wrap all stored values with.
 * @param storage - Storage engine to use for recording the value
 * @return Returns a state reader, setter and clear function
 *
 * @example
 * ```ts
 * const [value, setValue] = createStorage('app');
 * setValue('My new value');
 * console.log(value());
 * ```
 */
declare function createLocalStore<T>(prefix?: string | null, storage?: Storage): [
    store: T,
    setter: (key: string, value: string | number) => void,
    remove: (key: string) => void,
    clear: () => void
];
export default createLocalStore;
